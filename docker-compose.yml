services:
  api:
    image: api-service:latest
    build:
      context: ./api
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/your_database
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: bitnami
    networks:
      - kev-network

  auth:
    image: auth-service:latest
    ports:
      - "6700:6700"
    depends_on:
      - keycloak
    networks:
      - kev-network


  scheduler:
    image: scheduler-service:latest
    ports:
      - "5500:5500"
    networks:
      - kev-network

  db:
    image: postgres:15
    container_name: kevin_db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: your_database
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d your_database" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kev-network


  rabbitmq:
    image: 'bitnami/rabbitmq:3.8'
    container_name: kevin_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_USERNAME: user
      RABBITMQ_PASSWORD: bitnami
    healthcheck:
      test: [ "CMD-SHELL", "/opt/bitnami/scripts/rabbitmq/healthcheck.sh" ]
      interval: 10s
      timeout: 5s
    volumes:
      - 'rabbit_data:/bitnami'
    networks:
      - kev-network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    command: start-dev
    restart: always
    links:
      - db
    ports:
      - "9082:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin@1234
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
      KC_DB_URL: jdbc:postgresql://db:5432/your_database
      KC_HOSTNAME: keycloak
      KC_FEATURES: token-exchange,admin-fine-grained-authz
    #      KC_HTTP_RELATIVE_PATH: /keycloak
    networks:
      - kev-network

volumes:
  pgdata:
  rabbit_data:

networks:
  kev-network:
    name: kev-network
    driver: 'bridge'
